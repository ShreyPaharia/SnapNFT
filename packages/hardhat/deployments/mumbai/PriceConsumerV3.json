{
  "address": "0x429EFa36ff406aA9DCAE57A1488dE2097ABb1556",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ethPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maticPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8bf068b3a2ee197385712619c53c0876ea86d3e49b51050de9e183ee6048d37e",
  "receipt": {
    "to": null,
    "from": "0x64bdCD3513388D93431F7D4ff429553bb173D0b2",
    "contractAddress": "0x429EFa36ff406aA9DCAE57A1488dE2097ABb1556",
    "transactionIndex": 0,
    "gasUsed": "201038",
    "logsBloom": "0x
    "blockHash": "0x030c10f253e22bc4de81ba3290e6afa4e75509e983bb2c4cd5c3641c2f7de4bd",
    "transactionHash": "0x8bf068b3a2ee197385712619c53c0876ea86d3e49b51050de9e183ee6048d37e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17635865,
        "transactionHash": "0x8bf068b3a2ee197385712619c53c0876ea86d3e49b51050de9e183ee6048d37e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000064bdcd3513388d93431f7d4ff429553bb173d0b2",
          "0x000000000000000000000000e4b8e9222704401ad16d4d826732953daf07c7e2"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000156d4a354a680000000000000000000000000000000000000000000000000033f9855ef3dc5000000000000000000000000000000000000000000000000000013d2f5c8315840000000000000000000000000000000000000000000000000033e41814be91e80000000000000000000000000000000000000000000000000001529ca6b85fec00",
        "logIndex": 0,
        "blockHash": "0x030c10f253e22bc4de81ba3290e6afa4e75509e983bb2c4cd5c3641c2f7de4bd"
      }
    ],
    "blockNumber": 17635865,
    "cumulativeGasUsed": "201038",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "c498c08febadcd0092b38e2ffc3cbab0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maticPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Network: Mumbai Aggregator: ETH/USD Decimals: 8 Address: 0x0715A7794a1dc8e42615F059dD6e406A6594651A\"},\"ethPrice()\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/price-feed/ETHUSDPrice.sol\":\"PriceConsumerV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/price-feed/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n\\r\\n  function decimals() external view returns (uint8);\\r\\n  function description() external view returns (string memory);\\r\\n  function version() external view returns (uint256);\\r\\n\\r\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\r\\n  // if they do not have data to report, instead of returning unset values\\r\\n  // which could be misinterpreted as actual reported values.\\r\\n\\r\\n  function getRoundData(uint80 _roundId)\\r\\n    external\\r\\n    view\\r\\n    returns (\\r\\n      uint80 roundId,\\r\\n      int256 answer,\\r\\n      uint256 startedAt,\\r\\n      uint256 updatedAt,\\r\\n      uint80 answeredInRound\\r\\n    );\\r\\n\\r\\n  function latestRoundData()\\r\\n    external\\r\\n    view\\r\\n    returns (\\r\\n      uint80 roundId,\\r\\n      int256 answer,\\r\\n      uint256 startedAt,\\r\\n      uint256 updatedAt,\\r\\n      uint80 answeredInRound\\r\\n    );\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xd45548730b0d27cf4cdc6f97f2f58d34e9008cf5c68e19d783e788b73c5ae842\",\"license\":\"MIT\"},\"contracts/price-feed/ETHUSDPrice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract PriceConsumerV3 {\\r\\n\\r\\n    AggregatorV3Interface internal priceFeedEth;\\r\\n    AggregatorV3Interface internal priceFeedMatic;\\r\\n\\r\\n    /**\\r\\n     * Network: Mumbai\\r\\n     * Aggregator: ETH/USD\\r\\n     * Decimals: 8\\r\\n     * Address: 0x0715A7794a1dc8e42615F059dD6e406A6594651A\\r\\n     */\\r\\n\\r\\n    /* \\r\\n     * @notice change address when deploying to mainnet\\r\\n     */\\r\\n\\r\\n    constructor() {\\r\\n        priceFeedEth = AggregatorV3Interface(0x0715A7794a1dc8e42615F059dD6e406A6594651A);\\r\\n        priceFeedMatic = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the latest price\\r\\n     */\\r\\n\\r\\n    function ethPrice() public view returns (int) {\\r\\n        (, int price , , , ) = priceFeedEth.latestRoundData();\\r\\n        return price ; // 8 decimals\\r\\n    }\\r\\n\\r\\n    function maticPrice() public view returns (int) {\\r\\n        (, int price , , , ) = priceFeedMatic.latestRoundData();\\r\\n        return price ; // 8 decimals\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x30bc38f729f835b580ff6c68c5884a992660ad980d4e90e740965fd036d36ee9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319908116730715a7794a1dc8e42615f059dd6e406a6594651a179091556001805490911673d0d5e3db44de05e9f294bb0a3beeaf030de24ada1790556101da806100686000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806345ea451a1461003b578063ff186b2e14610055575b600080fd5b61004361005d565b60405190815260200160405180910390f35b6100436100f1565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e69190610155565b509195945050505050565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156100ae57600080fd5b805169ffffffffffffffffffff8116811461015057600080fd5b919050565b600080600080600060a0868803121561016c578081fd5b61017586610136565b945060208601519350604086015192506060860151915061019860808701610136565b9050929550929590935056fea2646970667358221220d0b3d4b2c18088879290606d24c93a65ec1847f43876bf3e4185f90ba3a9b04e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806345ea451a1461003b578063ff186b2e14610055575b600080fd5b61004361005d565b60405190815260200160405180910390f35b6100436100f1565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e69190610155565b509195945050505050565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156100ae57600080fd5b805169ffffffffffffffffffff8116811461015057600080fd5b919050565b600080600080600060a0868803121561016c578081fd5b61017586610136565b945060208601519350604086015192506060860151915061019860808701610136565b9050929550929590935056fea2646970667358221220d0b3d4b2c18088879290606d24c93a65ec1847f43876bf3e4185f90ba3a9b04e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Network: Mumbai Aggregator: ETH/USD Decimals: 8 Address: 0x0715A7794a1dc8e42615F059dD6e406A6594651A"
      },
      "ethPrice()": {
        "notice": "Returns the latest price"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 51,
        "contract": "contracts/price-feed/ETHUSDPrice.sol:PriceConsumerV3",
        "label": "priceFeedEth",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 54,
        "contract": "contracts/price-feed/ETHUSDPrice.sol:PriceConsumerV3",
        "label": "priceFeedMatic",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      }
    }
  }
}